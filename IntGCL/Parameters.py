# -*- coding: utf-8 -*-
import argparse

def ParseArgs():

    parser = argparse.ArgumentParser(description='Model Params')
    parser.add_argument('--lr', default=1e-3, type=float, help='learning rate')
    parser.add_argument('--batch', default=4096, type=int, help='batch size')
    parser.add_argument('--tstBat', default=256, type=int, help='number of users in a testing batch')
    parser.add_argument('--reg', default=1e-5, type=float, help='weight decay regularizer')
    parser.add_argument('--epoch', default=50, type=int, help='number of epochs')
    parser.add_argument('--cal_epochs', default=10, type=int,help='the number of epochs used to calculate the average merits')
    parser.add_argument('--latdim', default=64, type=int, help='embedding size')
    parser.add_argument('--gnn_layer', default=2, type=int, help='number of gnn layers')
    parser.add_argument('--M', default=500, type=int, help='the path length generated by each random walk')
    parser.add_argument('--R', default=8, type=int, help='the number of times to perform a random walk')
    parser.add_argument('--topk', default=20, type=int, help='K of top K')
    parser.add_argument('--data', default='yelp', type=str, help='name of dataset')
    parser.add_argument('--ssl_reg', default=1.0, type=float, help='weight for contrative learning')
    parser.add_argument("--ib_reg", type=float, default=0.1, help='weight for information bottleneck')
    # parser.add_argument('--temp', default=0.5, type=float, help='temperature in contrastive learning')
    parser.add_argument('--temp', default=0.5, type=float, help='temperature in contrastive learning')
    parser.add_argument('--epsilon', default=1.0, type=float, help='the contribution of the attention matrix')
    parser.add_argument('--edge_ratio', default=1e-3, type=float, help='The ratio of adding or deleting edges in the denoising process of the original adjacency matrix')
    parser.add_argument('--tstEpoch', default=1, type=int, help='number of epoch to test while training')
    parser.add_argument('--gpu', default=0, type=int, help='indicates which gpu to use')
    parser.add_argument('--lambda0', type=float, default=1e-4, help='weight for L0 loss on laplacian matrix.')
    #parser.add_argument('--gamma', type=float, default=-0.45)               denoise
    parser.add_argument('--zeta', type=float, default=1.05)
    parser.add_argument('--init_temperature', type=float, default=2.0)
    parser.add_argument('--temperature_decay', type=float, default=0.98)
    parser.add_argument("--eps", type=float, default=1e-3)  # prevent devide 0
    parser.add_argument("--seed", type=int, default=421, help="random seed")
    #�������Ҫһ��Ĭ��ΪFalse�����ṩ��ĳ����־ʱ��ΪTrue�Ĳ���
    parser.add_argument("--no_cal_mtx_flag", action="store_false", help="flag used to determine whether to calculate the attention-aware matrix")
    parser.add_argument("--no_save_mtx_flag", action="store_false", help="Flag used to determine whether to save the "
                                                                         "attention-aware matrix")
    return parser.parse_args()
args = ParseArgs()
